// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/hewenyu/todo/ent/temple"
	"github.com/hewenyu/todo/ent/user"
)

// CreateTempleInput represents a mutation input for creating temples.
type CreateTempleInput struct {
	CreatedAt *time.Time
	UpdatedAt *time.Time
	Status    *temple.Status
	DeleteAt  *temple.DeleteAt
	Text      string
	Priority  *int
	ChildIDs  []uint64
	ParentID  *uint64
	OwnerID   *uint64
}

// Mutate applies the CreateTempleInput on the TempleMutation builder.
func (i *CreateTempleInput) Mutate(m *TempleMutation) {
	if v := i.CreatedAt; v != nil {
		m.SetCreatedAt(*v)
	}
	if v := i.UpdatedAt; v != nil {
		m.SetUpdatedAt(*v)
	}
	if v := i.Status; v != nil {
		m.SetStatus(*v)
	}
	if v := i.DeleteAt; v != nil {
		m.SetDeleteAt(*v)
	}
	m.SetText(i.Text)
	if v := i.Priority; v != nil {
		m.SetPriority(*v)
	}
	if v := i.ChildIDs; len(v) > 0 {
		m.AddChildIDs(v...)
	}
	if v := i.ParentID; v != nil {
		m.SetParentID(*v)
	}
	if v := i.OwnerID; v != nil {
		m.SetOwnerID(*v)
	}
}

// SetInput applies the change-set in the CreateTempleInput on the TempleCreate builder.
func (c *TempleCreate) SetInput(i CreateTempleInput) *TempleCreate {
	i.Mutate(c.Mutation())
	return c
}

// CreateUserInput represents a mutation input for creating users.
type CreateUserInput struct {
	CreatedAt *time.Time
	UpdatedAt *time.Time
	Status    *user.Status
	DeleteAt  *user.DeleteAt
	TodoIDs   []uint64
}

// Mutate applies the CreateUserInput on the UserMutation builder.
func (i *CreateUserInput) Mutate(m *UserMutation) {
	if v := i.CreatedAt; v != nil {
		m.SetCreatedAt(*v)
	}
	if v := i.UpdatedAt; v != nil {
		m.SetUpdatedAt(*v)
	}
	if v := i.Status; v != nil {
		m.SetStatus(*v)
	}
	if v := i.DeleteAt; v != nil {
		m.SetDeleteAt(*v)
	}
	if v := i.TodoIDs; len(v) > 0 {
		m.AddTodoIDs(v...)
	}
}

// SetInput applies the change-set in the CreateUserInput on the UserCreate builder.
func (c *UserCreate) SetInput(i CreateUserInput) *UserCreate {
	i.Mutate(c.Mutation())
	return c
}
